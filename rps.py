# -*- coding: utf-8 -*-
"""RPS.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13aLdVNTr1cffGA750NLgfMM5qOi9aGJS

# Proyek Machine Learning : Klasifikasi Rock Paper Scissors
- Nama: Edward Thomas Alexander
- Email: edwardthomas753@gmail.com
- Id Dicoding: veritaz
"""

import pandas as pd
import numpy as np
import tensorflow as tf

from google.colab import drive

from google.colab import drive
drive.mount('/content/drive')

train_dir = "/content/drive/MyDrive/Datasets RPS/train"
test_dir = "/content/drive/MyDrive/Datasets RPS/test"

paper_photo= "/content/drive/MyDrive/Datasets RPS/train/paper"
rock_photo= "/content/drive/MyDrive/Datasets RPS/train/rock"
scissor_photo= "/content/drive/MyDrive/Datasets RPS/traincissors"

import os
import random
import matplotlib.pyplot as plt
drive.mount('/content/drive')

paper_dir = "/content/drive/MyDrive/Datasets RPS/train/paper"

img_files= os.listdir(paper_dir)
png_files = [file for file in img_files if file.endswith('png')]

count=5

total_img = len(png_files)

if total_img > count:
  random_img = random.sample(png_files, count)

  plt.figure(figsize=(15,8))
  for i, img_name in enumerate(random_img):
    img_path = os.path.join(paper_dir, img_name)
    sp = plt.subplot(1, count, i+1)
    img = plt.imread(img_path)
    plt.imshow(img)
    plt.axis('off')

  plt.show()
else:
  print("Jumlah data kurang dari : ", count)

from tensorflow.keras.preprocessing.image import ImageDataGenerator

train_datagen = ImageDataGenerator(
    rescale=1./255,
    rotation_range=20,
    horizontal_flip=True,
    zoom_range=0.2,
    shear_range=0.2,
    validation_split = 0.4
)


train_generator = train_datagen.flow_from_directory(
    train_dir,
    target_size=(100, 100),
    batch_size=32,
    class_mode='categorical',
    shuffle=True,
    subset='training'
)

test_datagen = ImageDataGenerator(
                    rescale=1./255,
                    validation_split=0.4
                    )

test_generator = train_datagen.flow_from_directory(
        train_dir,
        target_size=(100, 100),
        batch_size=32,
        class_mode='categorical',
        shuffle=True,
        subset='validation')

model = tf.keras.models.Sequential([
        tf.keras.layers.Conv2D(16, (3,3), activation='relu', input_shape=(100,100,3)),
        tf.keras.layers.MaxPooling2D(2, 2),
        tf.keras.layers.Dropout(0.25),
        tf.keras.layers.Conv2D(32, (3,3), activation='relu'),
        tf.keras.layers.MaxPooling2D(2,2),
        tf.keras.layers.Dropout(0.25),
        tf.keras.layers.Conv2D(64, (3,3), activation='relu'),
        tf.keras.layers.MaxPooling2D(2,2),
        tf.keras.layers.Dropout(0.25),
        tf.keras.layers.Conv2D(128, (3,3), activation='relu'),
        tf.keras.layers.MaxPooling2D(2,2),
        tf.keras.layers.Dropout(0.25),
        tf.keras.layers.Flatten(),
        tf.keras.layers.Dense(512, activation='relu'),
        tf.keras.layers.Dense(3, activation=tf.nn.softmax)
])

model.summary()

import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.optimizers import Adam, RMSprop

model.compile(loss='categorical_crossentropy',
              optimizer='RMSprop',
              metrics=['accuracy'])

model.fit(
      train_generator,
      steps_per_epoch=16,
      epochs=30,
      validation_data=test_generator,
      validation_steps=5,
      verbose=1)

import matplotlib.image as mpimg
from tensorflow.keras.preprocessing import image
from google.colab import files

uploaded = files.upload()

for fn in uploaded.keys():
  path = fn
  img = image.load_img(path, target_size=(100,100))

  imgplot = plt.imshow(img)
  x = image.img_to_array(img)
  x = np.expand_dims(x, axis=0)
  images = np.vstack([x])

  classes = model.predict(images, batch_size=10)
  print(fn)
  if classes[0][0] == 1:
    print('Paper')
  elif classes[0][1] == 1:
    print('Rock')
  else:
    print('Scissors')

